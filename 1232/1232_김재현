#include "stdafx.h"
/*
#include <iostream>
using namespace std;

struct Node {
	int num;
	char tree;
	Node *left;
	Node *right;
};
Node *nodes;
int a = 0;
void inorder_traverse(Node *R) {
	if (R->left)
		inorder_traverse(R->left);
	if (R->right)
		inorder_traverse(R->right);
}
int main() {
	int n, left, right;
	char chr;
	int number;
	for (int tc = 0; tc<10; tc++)
	{
		a = 0;
		cin >> n;
		nodes = new Node;
		for (int i = 1; i<n + 1; i++)
		{
			scanf("%*d %s", &chr);
			nodes[i - 1].tree = chr;

			nodes[i - 1].num = i;
			if ((n % 2 == 0 && i<n / 2) || (n % 2 == 1 && i <= ((n - 1) / 2)))
			{
				cin >> left >> right;
				nodes[i - 1].left = &nodes[left - 1];
				nodes[i - 1].right = &nodes[right - 1];
			}
			else if (n % 2 == 0 && i == n / 2)
			{
				cin >> left;
				nodes[i - 1].left = &nodes[left - 1];
				nodes[i - 1].right = NULL;
			}
			else {
				nodes[i - 1].left = NULL;
				nodes[i - 1].right = NULL;
			}
		}
		cout << "#" << tc + 1 << " ";
		inorder_traverse(&nodes[0]);
		cout << endl;
		free(nodes);
	}
}*/
