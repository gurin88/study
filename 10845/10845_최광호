#include <iostream>
#include <string>
using namespace std;

int que[100] = { 0 };
int f = 0;
int b = 0;

void push(int c)
{
	// 만약에 비어있으면
	if (f == b)
	{
		que[0] = c;
		b = 1;
	}		
	// 값이 들어있으면
	else
	{
		que[b] = c;
		b += 1;
	}
}
// 큐에서 가장 앞에 있는 정수를 빼고, 그 수를 출력한다. 만약 큐에 들어있는 정수가 없는 경우에는 -1을 출력한다.
void pop()
{
	if (f == b)
		cout << "-1\n";
	else
	{
		int d = 0;
		d = que[f];
		for (int a = 0; a < b; a++)
		{
			que[a] = que[a + 1];
		}
		cout << d << "\n";
		b = b - 1;
	}
}
// 큐에 들어있는 정수의 개수를 출력한다.
void size()
{
	cout << b <<"\n";
}
// 큐가 비어있으면 1, 아니면 0을 출력한다.
void empty()
{
	if (f==b)
	{
		cout << "1\n";
	}
	else
	{
		cout << "0\n";
	}
}
// 큐의 가장 앞에 있는 정수를 출력한다.만약 큐에 들어있는 정수가 없는 경우에는 - 1을 출력한다.
void front()
{
	if (f==b)
	{
		cout << "-1\n";
	}
	else
	{
		cout << que[f] << "\n";
	}
}
// 큐의 가장 뒤에 있는 정수를 출력한다. 만약 큐에 들어있는 정수가 없는 경우에는 -1을 출력한다.
void back()
{
	if (f == b)
	{
		cout << "-1\n";
	}
	else
	{
		cout << que[b-1] << "\n";
	}
}

void quefunction()
{
	string a;
	int c = 0;
	cin >> a;
	if (a == "push")
	{
		cin >> c;
		push(c);
	}
	else if (a == "pop")
		pop();
	else if (a == "size")
		size();
	else if (a == "empty")
		empty();
	else if (a == "front")
		front();
	else if (a == "back")
		back();
}
int main()
{
	int N = 0;
	
	cin >> N;

	for (int a = 0 ; a < N ; a++)
		quefunction();
	   	  
}
