#include <iostream>

using namespace std;

// 0 빈칸  , 1~5 cctv, 6 벽, 7 시야지대
// 1 : 한 방향
// 2:  반대의 두방향
// 3:  직각의 두방향
// 4:  세방향
// 5:  네방향

// 좌표값, cctv번호, 맵정보, 방향값을 받아 맵에 표기
// 0이 아닌구간만 7로 표기하고 벽이나 다른 cctv를 만나면 멈추게 해야함
// cctv의 종류에 따라 방향ㅁ니ㅏㅇㄹ마ㅣㄴㅇ러ㅣㅏ;먼
void forcheck(int a, int cctvnum, int map[][8], int map2[][8],int N,int M,int cctvwhkfy[][8])
{
	for (int b = 0 ; b < 8  ; b++)
	{
		if (a == 0) //0방향 -> 위방향
		{
			// 모두 위방향
			if( 0 <= (cctvwhkfy[0][cctvnum] - b) )
				map2[cctvwhkfy[0][cctvnum] - b][cctvwhkfy[1][cctvnum]] = 7;
			// 2, 4, 5일경우 아래 방향 
			if( (a==2 || a==4 || a==5) && ((cctvwhkfy[0][cctvnum] + b) < N)  )    
				map2[ cctvwhkfy[0][cctvnum] + b ][cctvwhkfy[1][cctvnum]] = 7;
			// 3, 4, 5일경우 오른쪽 방향
			if ( (a == 3 || a == 4 || a == 5) && ((cctvwhkfy[1][cctvnum] + b) < M) )
				map2[cctvwhkfy[0][cctvnum] ][cctvwhkfy[1][cctvnum] + b ] = 7;
			// 5일경우 왼쪽 방향
			if ( (a == 5) && (0 <= (cctvwhkfy[1][cctvnum] - b)) )
				map2[cctvwhkfy[0][cctvnum]][cctvwhkfy[1][cctvnum] - b] = 7;
		}
		if (a == 1) //1방향 -> 오른
		{
			// 모두 위방향
			if ( (cctvwhkfy[1][cctvnum] + b) < M )
				map2[cctvwhkfy[0][cctvnum] ][ cctvwhkfy[1][cctvnum] + b ] = 7;
			// 2, 4, 5일경우 아래 방향 
			if ((a == 2 || a == 4 || a == 5) && ( 0 <= (cctvwhkfy[1][cctvnum] - b) ) )   
				map2[cctvwhkfy[0][cctvnum] ][ cctvwhkfy[1][cctvnum] - b] = 7;
			// 3, 4, 5일경우 오른쪽 방향
			if ((a == 3 || a == 4 || a == 5) && (cctvwhkfy[0][cctvnum] + b < N))  
				map2[cctvwhkfy[0][cctvnum] + b][cctvwhkfy[1][cctvnum] ] = 7;
			// 5일경우 왼쪽 방향
			if ((a == 5) && (0 <= cctvwhkfy[0][cctvnum] - b))
				map2[cctvwhkfy[0][cctvnum] - b][cctvwhkfy[1][cctvnum] ] = 7;		
		}
		if (a == 2) //2방향 -> 아래
		{
			// 모두 위방향 
			if((cctvwhkfy[0][cctvnum] + b) < N)
				map2[cctvwhkfy[0][cctvnum] + b][cctvwhkfy[1][cctvnum]] = 7;
			// 2, 4, 5일경우 아래 방향 
			if ((a == 2 || a == 4 || a == 5) && (0 <= cctvwhkfy[0][cctvnum] - b))
				map2[cctvwhkfy[0][cctvnum] - b][cctvwhkfy[1][cctvnum]] = 7;
			// 3, 4, 5일경우 오른쪽 방향
			if ((a == 3 || a == 4 || a == 5) && (0 <= cctvwhkfy[1][cctvnum] - b))
				map2[cctvwhkfy[0][cctvnum]][cctvwhkfy[1][cctvnum] - b] = 7;
			// 5일경우 왼쪽 방향
			if ((a == 5) && (cctvwhkfy[1][cctvnum] + b < M))
				map2[cctvwhkfy[0][cctvnum]][cctvwhkfy[1][cctvnum] + b] = 7;
		}
		if (a == 4) //3방향
		{
			// 모두 위방향 
			if(0 <= cctvwhkfy[1][cctvnum] - b)
				map2[cctvwhkfy[0][cctvnum] ][cctvwhkfy[1][cctvnum] - b] = 7;
			// 2, 4, 5일경우 아래 방향 
			if ((a == 2 || a == 4 || a == 5) && (cctvwhkfy[1][cctvnum] + b < M))
				map2[cctvwhkfy[0][cctvnum] ][cctvwhkfy[1][cctvnum] + b] = 7;
			// 3, 4, 5일경우 오른쪽 방향
			if ((a == 3 || a == 4 || a == 5) && (0 <= cctvwhkfy[0][cctvnum] - b))
				map2[cctvwhkfy[0][cctvnum] - b ][cctvwhkfy[1][cctvnum] ] = 7;
			// 5일경우 왼쪽 방향
			if ((a == 5) && (cctvwhkfy[0][cctvnum] + b < N))
				map2[cctvwhkfy[0][cctvnum] + b][cctvwhkfy[1][cctvnum] ] = 7;
		}
	}
}
// 사각지대 값 카운트 함수
int countcctv(int map2[][8], int N, int M)
{
	int num = 0;
	for (int a = 0; a < N ; a++)
		for (int b = 0 ; b < M ; b++)
			if (map2[N][M]==0)
				num++;
	return num;
}

// 사각지대 최솟값, 현재확인중인 cctv번호, 전체 cctv갯수, 입력받은 사무실데이터, 편집할 사무실데이터, 세로길이, 가로길이, cctv좌표
void minimum(int output, int cctvnum, int totalcctvnum, int map[][8], int map2[][8], int N, int M, int cctvwhkvy[][8])
{
	// 모든 cctv를 확인했으면 
	// 사각지대의 갯수를 카운트하고 전의 값보다 작으면 최신화
	// 마지막으로 map2초기화
	if (cctvnum == totalcctvnum)
	{
		int outputnum2;
		outputnum2 = countcctv(map2,N,M);
		if (output > outputnum2)
			output = outputnum2;
		for (int a = 0 ; a < N ; a++)
			for (int b = 0; b < M ; b++)
				map2[a][b] = map[a][b];		
	}	
	// 모든 cctv를 확인하지 않았으면 다음 번호의 cctv로 4가지 방향에 대해 재귀
	for (int a = 0 ; a < 4 ; a++)
	{
		// cctvnum번호의 cctvwhkvy 좌표에 있는 cctv가 a방향으로 향할때 시야범위를 표기하고 재귀
		forcheck(a, cctvnum, map, map2, N,  M, cctvwhkvy);
		minimum(output, cctvnum + 1, totalcctvnum, map, map2, N, M, cctvwhkvy);
	}
}

int main(void) 
{
	int N, M;                    // 1<= N ,M <= 8
	int map[8][8] = { 0 } ;      // 입력 사무실데이터
	int map2[8][8] = { 0 } ;     // 확인용 사무실데이터
	int totalcctvnum = 0;        // 총 cctv 갯수
	int cctvwhkvy[2][8] = { 0 }; // cctv의 좌표
	int output = 64;
	

	cin >> N >> M;
	
	for (int a = 0 ; a < N ; a++)
		for (int b = 0; b < M; b++)
		{
			cin >> map[a][b];
			if (1 <= map[a][b] && map[a][b] <= 5)  //입력값이 cctv이면 
			{
				cctvwhkvy[0][totalcctvnum] = a;    // 세로 좌표 입력
				cctvwhkvy[1][totalcctvnum] = b;    // 가로 좌표 입력
				totalcctvnum++;                    // cctv 갯수 카운트
			}
		}

	cout << totalcctvnum << "\n";
	for (int a = 0; a < N; a++)
	{
		for (int b = 0; b < M; b++)
			cout << map[a][b] << " ";
		cout << "\n";
	}			
	for (int a = 0 ; a < totalcctvnum; a++)
	{
		cout << cctvwhkvy[0][a] << " " << cctvwhkvy[1][a] << "\n";
	}

	minimum(output, 1 , totalcctvnum, map, map2, N, M, cctvwhkvy);	
	
	cout << output;
 }
