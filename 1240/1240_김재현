//0 3211 1011000 0110
//1 2221 1001100 0011
//2 2122 1100100 1001
//3 1411 1011110 0111
//4 1132 1100010 1000
//5 1231 1000110 0001
//6 1114 1111010 1110
//7 1312 1101110 1011
//8 1213 1110110 1101
//9 3112 1101000 1010

#include "stdafx.h"
/*
#include <iostream>
using namespace std;

int main()
{
	int case_num;
	int N, M, Q, P;
	cin >> case_num;
	for (int i = 0; i<case_num; i++)
	{
		P = 0;
		cin >> N >> M;
		char arr[101] = { 0 };
		for (int j = 0; j < N; j++)
		{

			for (int k = 0; k < M; k++)
			{
				cin >> arr[k];
			}
			if (P == 2)
				continue;
			for (int k = M - 1; k >= 0; k--)
			{
				if (arr[k] == '1')
				{
					Q = k;
					P = 1;
					break;
				}
			}
			if (P == 1)
			{
				int O[8] = { 0 };
				for (int k = Q, L = 7; L >= 0; k = k - 7, L--)
				{
					if (arr[k - 1] == '0' && arr[k - 2] == '1' && arr[k - 3] == '1' && arr[k - 4] == '0') {
						O[L] = 0;
					}
					else if (arr[k - 1] == '0' && arr[k - 2] == '0' && arr[k - 3] == '1' && arr[k - 4] == '1') {
						O[L] = 1;
					}
					else if (arr[k - 1] == '1' && arr[k - 2] == '0' && arr[k - 3] == '0' && arr[k - 4] == '1') {
						O[L] = 2;
					}
					else if (arr[k - 1] == '0' && arr[k - 2] == '1' && arr[k - 3] == '1' && arr[k - 4] == '1') {
						O[L] = 3;
					}
					else if (arr[k - 1] == '1' && arr[k - 2] == '0' && arr[k - 3] == '0' && arr[k - 4] == '0') {
						O[L] = 4;
					}
					else if (arr[k - 1] == '0' && arr[k - 2] == '0' && arr[k - 3] == '0' && arr[k - 4] == '1') {
						O[L] = 5;
					}
					else if (arr[k - 1] == '1' && arr[k - 2] == '1' && arr[k - 3] == '1' && arr[k - 4] == '0') {
						O[L] = 6;
					}
					else if (arr[k - 1] == '1' && arr[k - 2] == '0' && arr[k - 3] == '1' && arr[k - 4] == '1') {
						O[L] = 7;
					}
					else if (arr[k - 1] == '1' && arr[k - 2] == '1' && arr[k - 3] == '0' && arr[k - 4] == '1') {
						O[L] = 8;
					}
					else if (arr[k - 1] == '1' && arr[k - 2] == '0' && arr[k - 3] == '1' && arr[k - 4] == '0') {
						O[L] = 9;
					}
				}
				int ans = (O[0] + O[2] + O[4] + O[6]) * 3 + (O[1] + O[3] + O[5]) + O[7];
				int sum = 0;
				if (ans % 10 == 0) {
					for (int i = 0; i < 8; i++) {
						sum += O[i];
					}
				}
				cout << "#" << i + 1 << " " << sum << endl;
				P = 2;
			}
		}
	}
	return 0;
}
*/
