#include <iostream>
#include <algorithm>

using namespace std;

const int MAX = 1000000001;

int N;
int number[12], oper[4];
int maxR = -MAX, minR = MAX;


void dfs(int plus, int minus, int mult, int divide, int cnt, int sum)
{
	//연산자를 모두 사용하였을 경우
	if (cnt == N) {
		maxR = max(maxR, sum);
		minR = min(minR, sum);
	}
	//모든 경우를 고려
	if (plus > 0)
		dfs(plus - 1, minus, mult, divide, cnt + 1, sum + number[cnt]);

	if (minus > 0)
		dfs(plus, minus - 1, mult, divide, cnt + 1, sum - number[cnt]);

	if (mult > 0)
		dfs(plus, minus, mult - 1, divide, cnt + 1, sum * number[cnt]);

	if (divide > 0)
		dfs(plus, minus, mult, divide - 1, cnt + 1, sum / number[cnt]);
}



int main(void)
{
	cin >> N;
	for (int i = 0; i < N; i++)
		cin >> number[i];

	for (int i = 0; i < 4; i++)
		cin >> oper[i];

	dfs(oper[0], oper[1], oper[2], oper[3], 1, number[0]);

	cout << maxR << endl;
	cout << minR << endl;

	return 0;

}
